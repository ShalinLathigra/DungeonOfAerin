[gd_scene load_steps=18 format=2]

[ext_resource path="res://Map/RawAutotile.tres" type="TileSet" id=1]
[ext_resource path="res://Map/Tilesets/ForgottenDungeon.png" type="Texture" id=2]
[ext_resource path="res://Map/Components/Door.tscn" type="PackedScene" id=3]
[ext_resource path="res://Map/Components/DamageSurface.tscn" type="PackedScene" id=4]
[ext_resource path="res://Map/Components/ObjectEmitter.tscn" type="PackedScene" id=5]
[ext_resource path="res://Player/Player.tscn" type="PackedScene" id=6]
[ext_resource path="res://Map/Components/MovingPlatform.tscn" type="PackedScene" id=7]
[ext_resource path="res://Map/Components/Key.tscn" type="PackedScene" id=8]
[ext_resource path="res://icon.png" type="Texture" id=9]
[ext_resource path="res://ToolNodes/AnimateOnEntry.gd" type="Script" id=10]

[sub_resource type="RectangleShape2D" id=7]
extents = Vector2( 1412, 188.134 )

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D texture_override;
uniform float green_limiter : hint_range(0, 1);

// based off of the red levels. If < c1, 
void fragment() {
	vec2 uv = vec2(mod(UV.x * 12.0, 1.0), mod(UV.y * 4.0, 1.0));
	COLOR = texture(TEXTURE, UV);
	if (COLOR.g < green_limiter){
		COLOR = texture(texture_override, vec2(uv.x/2.0, uv.y) + vec2(0.5, 0));
	} else {
		COLOR = texture(texture_override, vec2(uv.x/2.0, uv.y));
	}
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/green_limiter = 1.0
shader_param/texture_override = ExtResource( 2 )

[sub_resource type="Shader" id=5]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/pixelate

This shader is under CC0 license. Feel free to use, improve and 
change this shader according to your needs and consider sharing 
the modified result to godotshaders.com.
*/

shader_type canvas_item;

uniform int amount = 40;

void fragment()
{
	vec2 grid_uv = round(SCREEN_UV * float(amount)) / float(amount);
	
	vec4 text = texture(SCREEN_TEXTURE, grid_uv);
	float average = (text.r + text.g + text.b) / 3.0;	
	COLOR = vec4(text.r,average,text.b,1.0);
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/amount = 256

[sub_resource type="Animation" id=4]
resource_name = "animate_entry"
tracks/0/type = "value"
tracks/0/path = NodePath("Player/Icon:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, -163 ), Vector2( -1304, -163 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Player/Icon:self_modulate")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 5.85634 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "animate_exit"
tracks/0/type = "value"
tracks/0/path = NodePath("Player/Icon:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 1392, -163 ), Vector2( 1, -163 ) ]
}
tracks/1/type = "method"
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 1 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ "queue_free" ],
"method": "call_deferred"
} ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Player/Icon:self_modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 0.233258 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[node name="Node2D" type="Node2D"]
script = ExtResource( 10 )

[node name="ParallaxLayer" type="ParallaxBackground" parent="."]
offset = Vector2( 320, 0 )
transform = Transform2D( 1, 0, 0, 1, 320, 0 )

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxLayer"]
position = Vector2( 376, -56 )
motion_mirroring = Vector2( 1536, 1536 )

[node name="Sprite" type="Sprite" parent="ParallaxLayer/ParallaxLayer"]
modulate = Color( 0.0392157, 0.133333, 0.0705882, 1 )
texture = ExtResource( 9 )
region_enabled = true
region_rect = Rect2( 0, 0, 1536, 1536 )

[node name="DamageSurface" parent="." instance=ExtResource( 4 )]
position = Vector2( 128, 1376 )

[node name="CollisionShape2D" parent="DamageSurface" index="0"]
visible = false
position = Vector2( 932, 156 )

[node name="Sprite" parent="DamageSurface" index="1"]
position = Vector2( 948, 148 )
scale = Vector2( 31.625, 5.625 )

[node name="DamageSurface2" parent="." instance=ExtResource( 4 )]
position = Vector2( 2160, 1496 )

[node name="CollisionShape2D" parent="DamageSurface2" index="0"]
visible = false
position = Vector2( -720, 136 )
rotation = 0.0298208
shape = SubResource( 7 )

[node name="Sprite" parent="DamageSurface2" index="1"]
position = Vector2( 316, 148 )
scale = Vector2( 11.875, 5.625 )

[node name="TileMap" type="TileMap" parent="."]
material = SubResource( 2 )
tile_set = ExtResource( 1 )
collision_layer = 18
collision_mask = 0
format = 1
tile_data = PoolIntArray( -262146, 0, 8, -262145, 0, 10, -327680, 0, 10, -327679, 0, 10, -327678, 0, 10, -327677, 0, 10, -327676, 0, 10, -327675, 0, 10, -327674, 0, 10, -327673, 0, 10, -327672, 0, 10, -327671, 0, 10, -327670, 0, 6, -327669, 0, 196610, -327668, 0, 5, -327667, 0, 10, -327666, 0, 10, -327665, 0, 10, -327664, 0, 10, -327663, 0, 10, -327662, 0, 10, -327661, 0, 10, -327660, 0, 10, -327659, 0, 10, -327658, 0, 10, -327657, 0, 10, -327656, 0, 10, -327655, 0, 10, -327654, 0, 10, -327653, 0, 10, -327652, 0, 10, -327651, 0, 10, -327650, 0, 10, -327649, 0, 10, -327648, 0, 10, -327647, 0, 10, -327646, 0, 10, -327645, 0, 10, -327644, 0, 10, -327643, 0, 10, -327642, 0, 10, -327641, 0, 10, -327640, 0, 10, -327639, 0, 11, -196610, 0, 65544, -196609, 0, 131081, -262144, 0, 131081, -262143, 0, 131081, -262142, 0, 131081, -262141, 0, 131078, -262140, 0, 196617, -262139, 0, 196617, -262138, 0, 196617, -262137, 0, 196617, -262136, 0, 196617, -262135, 0, 196617, -262134, 0, 196619, -262132, 0, 196616, -262131, 0, 196617, -262130, 0, 196617, -262129, 0, 196617, -262128, 0, 131077, -262127, 0, 131081, -262126, 0, 131081, -262125, 0, 131081, -262124, 0, 131081, -262123, 0, 131081, -262122, 0, 131081, -262121, 0, 131081, -262120, 0, 131081, -262119, 0, 131081, -262118, 0, 131081, -262117, 0, 131081, -262116, 0, 131081, -262115, 0, 131081, -262114, 0, 131081, -262113, 0, 131081, -262112, 0, 131081, -262111, 0, 131081, -262110, 0, 131081, -262109, 0, 131081, -262108, 0, 131081, -262107, 0, 131081, -262106, 0, 131081, -262105, 0, 131081, -262104, 0, 131081, -262103, 0, 131083, -131074, 0, 65544, -131073, 0, 131081, -196608, 0, 131081, -196607, 0, 131078, -196606, 0, 196617, -196605, 0, 196619, -196592, 0, 196616, -196591, 0, 196617, -196590, 0, 131077, -196589, 0, 131078, -196588, 0, 196617, -196587, 0, 196617, -196586, 0, 196617, -196585, 0, 196617, -196584, 0, 196617, -196583, 0, 196617, -196582, 0, 196617, -196581, 0, 196617, -196580, 0, 196617, -196579, 0, 196617, -196578, 0, 196617, -196577, 0, 196617, -196576, 0, 196617, -196575, 0, 196617, -196574, 0, 196617, -196573, 0, 196617, -196572, 0, 196617, -196571, 0, 196617, -196570, 0, 131077, -196569, 0, 131081, -196568, 0, 131081, -196567, 0, 131083, -65538, 0, 65544, -65537, 0, 131081, -131072, 0, 131078, -131071, 0, 196619, -131054, 0, 196616, -131053, 0, 131079, -131034, 0, 196616, -131033, 0, 131077, -131032, 0, 131081, -131031, 0, 131083, -2, 0, 65544, -1, 0, 131081, -65536, 0, 131083, -65517, 0, 65536, -65497, 0, 196616, -65496, 0, 131077, -65495, 0, 131083, 65534, 0, 65544, 65535, 0, 131081, 0, 0, 131083, 19, 0, 65536, 40, 0, 65544, 41, 0, 131083, 131070, 0, 65544, 131071, 0, 131081, 65536, 0, 65542, 65537, 0, 10, 65538, 0, 10, 65539, 0, 11, 65542, 0, 8, 65543, 0, 10, 65544, 0, 10, 65545, 0, 10, 65546, 0, 10, 65547, 0, 10, 65548, 0, 10, 65549, 0, 10, 65550, 0, 10, 65551, 0, 10, 65552, 0, 10, 65553, 0, 10, 65554, 0, 10, 65555, 0, 65543, 65576, 0, 65544, 65577, 0, 131083, 196606, 0, 65544, 196607, 0, 131081, 131072, 0, 131081, 131073, 0, 131078, 131074, 0, 196617, 131075, 0, 196619, 131078, 0, 196616, 131079, 0, 196617, 131080, 0, 196617, 131081, 0, 196617, 131082, 0, 196617, 131083, 0, 196617, 131084, 0, 196617, 131085, 0, 196617, 131086, 0, 196617, 131087, 0, 196617, 131088, 0, 131077, 131089, 0, 131081, 131090, 0, 131081, 131091, 0, 65542, 131092, 0, 10, 131093, 0, 6, 131094, 0, 196610, 131095, 0, 5, 131096, 0, 10, 131097, 0, 6, 131098, 0, 196610, 131099, 0, 5, 131100, 0, 10, 131101, 0, 6, 131102, 0, 196610, 131103, 0, 5, 131104, 0, 10, 131105, 0, 10, 131106, 0, 6, 131107, 0, 196610, 131108, 0, 196611, 131112, 0, 65544, 131113, 0, 131083, 262142, 0, 65544, 262143, 0, 131081, 196608, 0, 131078, 196609, 0, 196619, 196624, 0, 196616, 196625, 0, 131077, 196626, 0, 131081, 196627, 0, 131081, 196628, 0, 131078, 196629, 0, 196619, 196631, 0, 196616, 196632, 0, 196617, 196633, 0, 196619, 196635, 0, 196616, 196636, 0, 196617, 196637, 0, 196619, 196639, 0, 196616, 196640, 0, 196617, 196641, 0, 196617, 196642, 0, 196619, 196648, 0, 65544, 196649, 0, 131083, 327678, 0, 65544, 327679, 0, 131081, 262144, 0, 131083, 262161, 0, 65544, 262162, 0, 131078, 262163, 0, 196617, 262164, 0, 196619, 262182, 0, 8, 262183, 0, 10, 262184, 0, 65541, 262185, 0, 131083, 393214, 0, 65544, 393215, 0, 131081, 327680, 0, 131083, 327697, 0, 65544, 327698, 0, 131083, 327716, 0, 8, 327717, 0, 10, 327718, 0, 65541, 327719, 0, 131081, 327720, 0, 131081, 327721, 0, 131083, 458750, 0, 65544, 458751, 0, 131081, 393216, 0, 131083, 393233, 0, 65544, 393234, 0, 131083, 393249, 0, 8, 393250, 0, 10, 393251, 0, 10, 393252, 0, 65541, 393253, 0, 131081, 393254, 0, 131081, 393255, 0, 131081, 393256, 0, 131081, 393257, 0, 131083, 524286, 0, 65544, 524287, 0, 131081, 458752, 0, 65542, 458753, 0, 10, 458754, 0, 11, 458769, 0, 65544, 458770, 0, 131083, 458783, 0, 8, 458784, 0, 10, 458785, 0, 65541, 458786, 0, 131081, 458787, 0, 131081, 458788, 0, 131081, 458789, 0, 131081, 458790, 0, 131081, 458791, 0, 131081, 458792, 0, 131081, 458793, 0, 131083, 589822, 0, 65544, 589823, 0, 131078, 524288, 0, 196617, 524289, 0, 196617, 524290, 0, 196614, 524291, 0, 196611, 524302, 0, 8, 524303, 0, 10, 524304, 0, 10, 524305, 0, 65545, 524306, 0, 196619, 524319, 0, 131076, 524320, 0, 196617, 524321, 0, 131077, 524322, 0, 131078, 524323, 0, 196617, 524324, 0, 196617, 524325, 0, 196617, 524326, 0, 196617, 524327, 0, 196617, 524328, 0, 196617, 524329, 0, 131082, 524330, 0, 10, 524331, 0, 11, 655358, 0, 65544, 655359, 0, 131083, 589838, 0, 65544, 589839, 0, 131081, 589840, 0, 131081, 589841, 0, 131083, 589855, 0, 131072, 589857, 0, 196616, 589858, 0, 131079, 589865, 0, 196616, 589866, 0, 196617, 589867, 0, 131079, 720894, 0, 65544, 720895, 0, 131083, 655365, 0, 8, 655366, 0, 10, 655367, 0, 11, 655372, 0, 8, 655373, 0, 10, 655374, 0, 65541, 655375, 0, 131081, 655376, 0, 131078, 655377, 0, 196619, 655394, 0, 131072, 655403, 0, 131073, 655404, 0, 3, 786430, 0, 65544, 786431, 0, 131083, 720898, 0, 1, 720899, 0, 196610, 720900, 0, 196610, 720901, 0, 196613, 720902, 0, 196617, 720903, 0, 196614, 720904, 0, 196610, 720905, 0, 196610, 720906, 0, 196610, 720907, 0, 196610, 720908, 0, 196613, 720909, 0, 196617, 720910, 0, 196617, 720911, 0, 196617, 720912, 0, 196619, 720933, 0, 8, 720934, 0, 11, 720940, 0, 65536, 851966, 0, 65544, 851967, 0, 131083, 786434, 0, 131072, 786469, 0, 65544, 786470, 0, 131083, 786475, 0, 8, 786476, 0, 65543, 917502, 0, 65544, 917503, 0, 131083, 852005, 0, 65544, 852006, 0, 131083, 852011, 0, 65544, 852012, 0, 131083, 983038, 0, 65544, 983039, 0, 131083, 917541, 0, 131076, 917542, 0, 196619, 917547, 0, 65544, 917548, 0, 131083, 1048574, 0, 65544, 1048575, 0, 131083, 983076, 0, 8, 983077, 0, 65543, 983083, 0, 65544, 983084, 0, 131083, 1114110, 0, 65544, 1114111, 0, 131083, 1048612, 0, 131076, 1048613, 0, 196619, 1048619, 0, 65544, 1048620, 0, 131083, 1179646, 0, 65544, 1179647, 0, 131083, 1114147, 0, 1, 1114148, 0, 131075, 1114155, 0, 196616, 1114156, 0, 131079, 1245182, 0, 65544, 1245183, 0, 65542, 1179648, 0, 6, 1179649, 0, 196611, 1179683, 0, 65536, 1179692, 0, 65536, 1310718, 0, 65544, 1310719, 0, 131081, 1245184, 0, 131083, 1245188, 0, 8, 1245189, 0, 11, 1245199, 0, 0, 1245218, 0, 8, 1245219, 0, 65543, 1245228, 0, 65540, 1245229, 0, 11, 1376254, 0, 65544, 1376255, 0, 131081, 1310720, 0, 131083, 1310724, 0, 65544, 1310725, 0, 131083, 1310732, 0, 0, 1310735, 0, 65536, 1310738, 0, 8, 1310739, 0, 10, 1310740, 0, 11, 1310753, 0, 8, 1310754, 0, 65541, 1310755, 0, 131083, 1310764, 0, 65544, 1310765, 0, 131083, 1441790, 0, 65544, 1441791, 0, 131081, 1376256, 0, 131083, 1376260, 0, 65544, 1376261, 0, 131083, 1376264, 0, 8, 1376265, 0, 11, 1376268, 0, 65536, 1376271, 0, 65536, 1376274, 0, 65544, 1376275, 0, 131081, 1376276, 0, 131083, 1376288, 0, 8, 1376289, 0, 65545, 1376290, 0, 196617, 1376291, 0, 196614, 1376292, 0, 196610, 1376293, 0, 196611, 1376300, 0, 65544, 1376301, 0, 131083, 1507326, 0, 65544, 1507327, 0, 131081, 1441792, 0, 131083, 1441796, 0, 65544, 1441797, 0, 131083, 1441800, 0, 65544, 1441801, 0, 131083, 1441804, 0, 65536, 1441807, 0, 65536, 1441810, 0, 65544, 1441811, 0, 131081, 1441812, 0, 131083, 1441824, 0, 65544, 1441825, 0, 131083, 1441836, 0, 65544, 1441837, 0, 65542, 1441838, 0, 11, 1572862, 0, 65544, 1572863, 0, 131081, 1507328, 0, 65542, 1507329, 0, 11, 1507332, 0, 65544, 1507333, 0, 131083, 1507336, 0, 65544, 1507337, 0, 131083, 1507340, 0, 65536, 1507343, 0, 65536, 1507346, 0, 65544, 1507347, 0, 131081, 1507348, 0, 131083, 1507360, 0, 65544, 1507361, 0, 131083, 1507372, 0, 65544, 1507373, 0, 131081, 1507374, 0, 131083, 1638398, 0, 65544, 1638399, 0, 131081, 1572864, 0, 131081, 1572865, 0, 65542, 1572866, 0, 10, 1572867, 0, 10, 1572868, 0, 65541, 1572869, 0, 65542, 1572870, 0, 10, 1572871, 0, 10, 1572872, 0, 65541, 1572873, 0, 65542, 1572874, 0, 10, 1572875, 0, 10, 1572876, 0, 9, 1572877, 0, 10, 1572878, 0, 10, 1572879, 0, 9, 1572880, 0, 10, 1572881, 0, 10, 1572882, 0, 65541, 1572883, 0, 131081, 1572884, 0, 65542, 1572885, 0, 10, 1572886, 0, 10, 1572887, 0, 10, 1572888, 0, 10, 1572889, 0, 10, 1572890, 0, 10, 1572891, 0, 10, 1572892, 0, 10, 1572893, 0, 10, 1572894, 0, 10, 1572895, 0, 10, 1572896, 0, 65541, 1572897, 0, 131083, 1572906, 0, 8, 1572907, 0, 10, 1572908, 0, 65541, 1572909, 0, 131081, 1572910, 0, 131083, 1703934, 0, 65544, 1703935, 0, 131081, 1638400, 0, 131081, 1638401, 0, 131081, 1638402, 0, 131081, 1638403, 0, 131081, 1638404, 0, 131081, 1638405, 0, 131081, 1638406, 0, 131081, 1638407, 0, 131081, 1638408, 0, 131081, 1638409, 0, 131081, 1638410, 0, 131081, 1638411, 0, 131081, 1638412, 0, 131081, 1638413, 0, 131081, 1638414, 0, 131081, 1638415, 0, 131081, 1638416, 0, 131081, 1638417, 0, 131081, 1638418, 0, 131081, 1638419, 0, 131081, 1638420, 0, 131081, 1638421, 0, 131081, 1638422, 0, 131081, 1638423, 0, 131081, 1638424, 0, 131081, 1638425, 0, 131081, 1638426, 0, 131081, 1638427, 0, 131081, 1638428, 0, 131081, 1638429, 0, 131081, 1638430, 0, 131081, 1638431, 0, 131081, 1638432, 0, 131081, 1638433, 0, 65542, 1638434, 0, 11, 1638440, 0, 8, 1638441, 0, 10, 1638442, 0, 65541, 1638443, 0, 131081, 1638444, 0, 131081, 1638445, 0, 131078, 1638446, 0, 196619, 1769470, 0, 196616, 1769471, 0, 196617, 1703936, 0, 196617, 1703937, 0, 196617, 1703938, 0, 196617, 1703939, 0, 196617, 1703940, 0, 196617, 1703941, 0, 196617, 1703942, 0, 196617, 1703943, 0, 196617, 1703944, 0, 196617, 1703945, 0, 196617, 1703946, 0, 196617, 1703947, 0, 196617, 1703948, 0, 196617, 1703949, 0, 196617, 1703950, 0, 196617, 1703951, 0, 196617, 1703952, 0, 196617, 1703953, 0, 196617, 1703954, 0, 196617, 1703955, 0, 196617, 1703956, 0, 196617, 1703957, 0, 196617, 1703958, 0, 196617, 1703959, 0, 196617, 1703960, 0, 196617, 1703961, 0, 196617, 1703962, 0, 196617, 1703963, 0, 196617, 1703964, 0, 196617, 1703965, 0, 196617, 1703966, 0, 131077, 1703967, 0, 131081, 1703968, 0, 131081, 1703969, 0, 131081, 1703970, 0, 65542, 1703971, 0, 10, 1703972, 0, 10, 1703973, 0, 10, 1703974, 0, 10, 1703975, 0, 10, 1703976, 0, 65541, 1703977, 0, 131081, 1703978, 0, 131081, 1703979, 0, 131081, 1703980, 0, 131081, 1703981, 0, 131083, 1769502, 0, 196616, 1769503, 0, 196617, 1769504, 0, 131077, 1769505, 0, 131081, 1769506, 0, 131081, 1769507, 0, 131081, 1769508, 0, 131081, 1769509, 0, 131081, 1769510, 0, 131081, 1769511, 0, 131081, 1769512, 0, 131081, 1769513, 0, 131081, 1769514, 0, 131081, 1769515, 0, 131081, 1769516, 0, 131078, 1769517, 0, 196619, 1835040, 0, 196616, 1835041, 0, 196617, 1835042, 0, 196617, 1835043, 0, 196617, 1835044, 0, 196617, 1835045, 0, 196617, 1835046, 0, 196617, 1835047, 0, 131077, 1835048, 0, 131081, 1835049, 0, 131081, 1835050, 0, 131078, 1835051, 0, 196617, 1835052, 0, 196619, 1900583, 0, 196616, 1900584, 0, 196617, 1900585, 0, 196617, 1900586, 0, 196619 )

[node name="Platforms" type="Node" parent="."]

[node name="MovingPlatform" parent="Platforms" instance=ExtResource( 7 )]
position = Vector2( 256, 544 )
offset = Vector2( 192, 0 )

[node name="MovingPlatform3" parent="Platforms" instance=ExtResource( 7 )]
position = Vector2( 1448, 1312 )
offset = Vector2( 192, 0 )

[node name="MovingPlatform5" parent="Platforms" instance=ExtResource( 7 )]
position = Vector2( 1640, 936 )
offset = Vector2( 192, 0 )

[node name="MovingPlatform6" parent="Platforms" instance=ExtResource( 7 )]
position = Vector2( 1856, 1048 )
offset = Vector2( 0, 256 )

[node name="MovingPlatform8" parent="Platforms" instance=ExtResource( 7 )]
position = Vector2( 1440, 744 )
offset = Vector2( 192, 0 )

[node name="MovingPlatform9" parent="Platforms" instance=ExtResource( 7 )]
position = Vector2( 1888, 608 )
offset = Vector2( -256, 0 )

[node name="MovingPlatform10" parent="Platforms" instance=ExtResource( 7 )]
position = Vector2( 1328, 488 )
offset = Vector2( 576, 0 )

[node name="MovingPlatform7" parent="Platforms" instance=ExtResource( 7 )]
position = Vector2( 2272, 800 )
offset = Vector2( -320, 0 )

[node name="MovingPlatform11" parent="Platforms" instance=ExtResource( 7 )]
position = Vector2( 2640, 1376 )
offset = Vector2( 0, -288 )

[node name="MovingPlatform12" parent="Platforms" instance=ExtResource( 7 )]
position = Vector2( 2648, 736 )
offset = Vector2( 0, 224 )

[node name="MovingPlatform2" parent="Platforms" instance=ExtResource( 7 )]
position = Vector2( 800, 416 )
offset = Vector2( -192, 0 )

[node name="Player" parent="." instance=ExtResource( 6 )]
position = Vector2( 120, 24 )
collision_mask = 2
walk_anim_tolerance = 11.0
gravity = 1881.6
horizontal_speed = 256.0
walk_particle_cutoff = 64.0
horizontal_ramp_modifier = 7.0
skin_width = 4.0
step_delay = 0.125
jump_buffer_msec = 100
coyote_time_msec = 250
jump_force = 448.0
max_jump_msec = 192

[node name="Camera2D" type="Camera2D" parent="Player"]
position = Vector2( 0, -163 )
current = true

[node name="Sprite" type="Sprite" parent="Player/Camera2D"]
material = SubResource( 6 )
position = Vector2( 208, 75 )
scale = Vector2( 17, 11.6563 )
z_index = 1000
z_as_relative = false
texture = ExtResource( 9 )
offset = Vector2( -13.6471, -6.17692 )

[node name="Icon" type="Sprite" parent="Player"]
visible = false
modulate = Color( 0, 0, 0, 1 )
position = Vector2( 0, -163 )
scale = Vector2( 22.625, 13.5 )
z_index = 100
z_as_relative = false
texture = ExtResource( 9 )

[node name="Keys" type="Node" parent="."]

[node name="Key" parent="Keys" instance=ExtResource( 8 )]
modulate = Color( 0, 0.203922, 1, 1 )
position = Vector2( 1120, 0 )

[node name="Key2" parent="Keys" instance=ExtResource( 8 )]
modulate = Color( 0, 0.203922, 1, 1 )
position = Vector2( 1003, 464 )

[node name="Key3" parent="Keys" instance=ExtResource( 8 )]
modulate = Color( 0.898039, 1, 0, 1 )
position = Vector2( 2432, 1216 )
specific_key = true

[node name="Doors" type="Node" parent="."]

[node name="Door" parent="Doors" instance=ExtResource( 3 )]
position = Vector2( 257, 98 )
rotation = 1.57079
locked = true

[node name="Door2" parent="Doors" instance=ExtResource( 3 )]
modulate = Color( 0.898039, 1, 0, 1 )
position = Vector2( 1312, 128 )
locked = true
special_key = true
key_start_path = NodePath("../../Keys/Key3")
destination = "res://UI/MainMenu.tscn"

[node name="Door3" parent="Doors" instance=ExtResource( 3 )]
position = Vector2( 160, 704 )
locked = true

[node name="Emitters" type="Node" parent="."]

[node name="ObjectEmitter" parent="Emitters" instance=ExtResource( 5 )]
objectType = "res://Map/Components/Arrow.tscn"
startup_delay = 500

[node name="ObjectEmitter2" parent="Emitters" instance=ExtResource( 5 )]
position = Vector2( 1696, 224 )
objectType = "res://Map/Components/Arrow.tscn"
delay_msec = 1500
startup_delay = 375

[node name="ObjectEmitter3" parent="Emitters" instance=ExtResource( 5 )]
position = Vector2( 1952, 224 )
objectType = "res://Map/Components/Arrow.tscn"
delay_msec = 1500
startup_delay = 675

[node name="ObjectEmitter6" parent="Emitters" instance=ExtResource( 5 )]
position = Vector2( 1440, 224 )
objectType = "res://Map/Components/Arrow.tscn"
delay_msec = 1500
startup_delay = 125

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/animate_entry = SubResource( 4 )
anims/animate_exit = SubResource( 3 )

[editable path="DamageSurface"]
[editable path="DamageSurface2"]
